{"version":3,"file":"Messages-8e172f4f.js","sources":["../../src/components/messages/MessageItem.vue","../../src/views/user/Messages.vue"],"sourcesContent":["<template>\n  <div class=\"message-item-container\" :class=\"{ 'unread': !message.isRead }\">\n    <div class=\"flex items-start\">\n      <!-- 消息图标 -->\n      <div class=\"message-icon mr-4 flex-shrink-0\">\n        <div class=\"icon-wrapper\" :class=\"iconBackgroundClass\">\n          <el-icon :size=\"20\" :color=\"iconColor\"><component :is=\"getIconComponent\" /></el-icon>\n        </div>\n      </div>\n      \n      <!-- 消息内容 -->\n      <div class=\"message-content flex-grow\">\n        <div class=\"flex items-center justify-between mb-1\">\n          <div class=\"message-title font-medium text-gray-900 flex items-center\">\n            {{ message.title }}\n            <div v-if=\"!message.isRead\" class=\"ml-2 w-2 h-2 rounded-full bg-red-500\"></div>\n          </div>\n          <div class=\"message-time text-xs text-gray-500\">{{ message.time }}</div>\n        </div>\n        <div class=\"message-body text-sm text-gray-600 mb-2\">\n          {{ message.content }}\n        </div>\n        <div class=\"message-actions flex justify-end space-x-2\">\n          <el-button v-if=\"!message.isRead\" type=\"text\" size=\"small\" @click=\"$emit('mark-read', message.id)\">\n            标记为已读\n          </el-button>\n          <el-button type=\"text\" size=\"small\" class=\"text-red-500\" @click=\"$emit('delete', message.id)\">\n            删除\n          </el-button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { computed } from 'vue';\nimport { \n  Warning, \n  InfoFilled, \n  Present, \n  Bicycle, \n  Tools, \n  Promotion, \n  Bell \n} from '@element-plus/icons-vue';\n\nconst props = defineProps({\n  message: {\n    type: Object,\n    required: true\n  }\n});\n\ndefineEmits(['mark-read', 'delete']);\n\n// 根据消息类型和图标名称获取对应的图标组件\nconst getIconComponent = computed(() => {\n  switch (props.message.icon) {\n    case 'warning':\n      return Warning;\n    case 'gift':\n      return Present;\n    case 'bike':\n      return Bicycle;\n    case 'tools':\n      return Tools;\n    case 'promotion':\n      return Promotion;\n    default:\n      return Bell;\n  }\n});\n\n// 根据消息类型获取图标背景色和文本色\nconst iconBackgroundClass = computed(() => {\n  switch (props.message.type) {\n    case 'system':\n      return 'bg-blue-100';\n    case 'activity':\n      return 'bg-amber-100';\n    case 'trip':\n      return 'bg-green-100';\n    default:\n      return 'bg-gray-100';\n  }\n});\n\nconst iconColor = computed(() => {\n  switch (props.message.type) {\n    case 'system':\n      return '#3b82f6'; // blue-500\n    case 'activity':\n      return '#f59e0b'; // amber-500\n    case 'trip':\n      return '#10b981'; // green-500\n    default:\n      return '#6b7280'; // gray-500\n  }\n});\n</script>\n\n<style scoped>\n.message-item-container {\n  position: relative;\n}\n\n.message-item-container.unread {\n  background-color: rgba(239, 246, 255, 0.5); /* blue-50 with opacity */\n}\n\n.icon-wrapper {\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n</style> ","<template>\n  <div class=\"messages-page py-8\">\n    <div class=\"container mx-auto px-4 sm:px-6 lg:px-8\">\n      <div class=\"bg-white rounded-xl shadow-md overflow-hidden\">\n        <div class=\"p-6\">\n          <div class=\"flex justify-between items-center mb-6\">\n            <h1 class=\"text-2xl font-bold text-gray-800\">消息通知</h1>\n            <div class=\"flex space-x-2\">\n              <el-button type=\"primary\" plain size=\"small\" @click=\"markAllAsRead\">\n                <el-icon class=\"mr-1\"><Check /></el-icon>\n                全部已读\n              </el-button>\n              <el-button type=\"danger\" plain size=\"small\" @click=\"clearAllMessages\">\n                <el-icon class=\"mr-1\"><Delete /></el-icon>\n                清空消息\n              </el-button>\n            </div>\n          </div>\n\n          <!-- 消息分类标签页 -->\n          <el-tabs v-model=\"activeTab\" class=\"message-tabs\">\n            <el-tab-pane name=\"all\" label=\"全部消息\">\n              <div class=\"message-list\">\n                <template v-if=\"filteredMessages.length > 0\">\n                  <div v-for=\"(message, index) in filteredMessages\" :key=\"message.id\" \n                       :class=\"['message-item', {'border-b border-gray-200': index !== filteredMessages.length - 1}]\">\n                    <MessageItem \n                      :message=\"message\" \n                      @mark-read=\"markAsRead(message.id)\" \n                      @delete=\"deleteMessage(message.id)\" \n                    />\n                  </div>\n                </template>\n                <div v-else class=\"empty-state\">\n                  <el-empty description=\"暂无消息\" />\n                </div>\n              </div>\n            </el-tab-pane>\n            \n            <el-tab-pane name=\"system\" label=\"系统通知\">\n              <div class=\"message-list\">\n                <template v-if=\"getMessagesByType('system').length > 0\">\n                  <div v-for=\"(message, index) in getMessagesByType('system')\" :key=\"message.id\" \n                       :class=\"['message-item', {'border-b border-gray-200': index !== getMessagesByType('system').length - 1}]\">\n                    <MessageItem \n                      :message=\"message\" \n                      @mark-read=\"markAsRead(message.id)\" \n                      @delete=\"deleteMessage(message.id)\" \n                    />\n                  </div>\n                </template>\n                <div v-else class=\"empty-state\">\n                  <el-empty description=\"暂无系统通知\" />\n                </div>\n              </div>\n            </el-tab-pane>\n            \n            <el-tab-pane name=\"activity\" label=\"活动消息\">\n              <div class=\"message-list\">\n                <template v-if=\"getMessagesByType('activity').length > 0\">\n                  <div v-for=\"(message, index) in getMessagesByType('activity')\" :key=\"message.id\" \n                       :class=\"['message-item', {'border-b border-gray-200': index !== getMessagesByType('activity').length - 1}]\">\n                    <MessageItem \n                      :message=\"message\" \n                      @mark-read=\"markAsRead(message.id)\" \n                      @delete=\"deleteMessage(message.id)\" \n                    />\n                  </div>\n                </template>\n                <div v-else class=\"empty-state\">\n                  <el-empty description=\"暂无活动消息\" />\n                </div>\n              </div>\n            </el-tab-pane>\n            \n            <el-tab-pane name=\"trip\" label=\"行程提醒\">\n              <div class=\"message-list\">\n                <template v-if=\"getMessagesByType('trip').length > 0\">\n                  <div v-for=\"(message, index) in getMessagesByType('trip')\" :key=\"message.id\" \n                       :class=\"['message-item', {'border-b border-gray-200': index !== getMessagesByType('trip').length - 1}]\">\n                    <MessageItem \n                      :message=\"message\" \n                      @mark-read=\"markAsRead(message.id)\" \n                      @delete=\"deleteMessage(message.id)\" \n                    />\n                  </div>\n                </template>\n                <div v-else class=\"empty-state\">\n                  <el-empty description=\"暂无行程提醒\" />\n                </div>\n              </div>\n            </el-tab-pane>\n          </el-tabs>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed, onMounted } from 'vue';\nimport { ElMessageBox, ElMessage } from 'element-plus';\nimport { Check, Delete, Bell, ChatLineRound, Timer, Promotion } from '@element-plus/icons-vue';\nimport MessageItem from '@/components/messages/MessageItem.vue';\n\n// 当前选中的标签页\nconst activeTab = ref('all');\n\n// 消息列表数据\nconst messages = ref([\n  {\n    id: 1,\n    type: 'system',\n    title: '账户安全提醒',\n    content: '您的账户刚刚成功登录，登录时间: 2024-04-12 14:30，如非本人操作，请立即修改密码。',\n    time: '2024-04-12 14:30',\n    isRead: false,\n    icon: 'warning'\n  },\n  {\n    id: 2,\n    type: 'activity',\n    title: '专属优惠来啦！',\n    content: '尊敬的用户，您有一张5元骑行券已发放到账户，有效期7天，请及时使用。',\n    time: '2024-04-11 10:15',\n    isRead: true,\n    icon: 'gift'\n  },\n  {\n    id: 3,\n    type: 'trip',\n    title: '骑行结束提醒',\n    content: '您的行程已结束，费用3.5元已从账户余额扣除，骑行时长25分钟，距离3.2公里。',\n    time: '2024-04-10 18:45',\n    isRead: false,\n    icon: 'bike'\n  },\n  {\n    id: 4,\n    type: 'system',\n    title: '系统维护通知',\n    content: '系统将于2024-04-15 03:00-05:00进行例行维护，维护期间可能无法使用部分功能，请提前做好安排。',\n    time: '2024-04-10 09:30',\n    isRead: false,\n    icon: 'tools'\n  },\n  {\n    id: 5,\n    type: 'activity',\n    title: '周末骑行优惠活动',\n    content: '本周末（4月13-14日）骑行满30分钟，即可获得10积分奖励，多骑多得，上不封顶！',\n    time: '2024-04-09 16:20',\n    isRead: true,\n    icon: 'promotion'\n  }\n]);\n\n// 根据当前标签页过滤消息\nconst filteredMessages = computed(() => {\n  if (activeTab.value === 'all') {\n    return messages.value;\n  } else {\n    return messages.value.filter(message => message.type === activeTab.value);\n  }\n});\n\n// 根据消息类型获取消息\nconst getMessagesByType = (type) => {\n  return messages.value.filter(message => message.type === type);\n};\n\n// 标记消息为已读\nconst markAsRead = (messageId) => {\n  const message = messages.value.find(msg => msg.id === messageId);\n  if (message && !message.isRead) {\n    message.isRead = true;\n    ElMessage.success('消息已标记为已读');\n  }\n};\n\n// 全部标记为已读\nconst markAllAsRead = () => {\n  if (messages.value.some(msg => !msg.isRead)) {\n    messages.value.forEach(msg => {\n      msg.isRead = true;\n    });\n    ElMessage.success('全部消息已标记为已读');\n  } else {\n    ElMessage.info('没有未读消息');\n  }\n};\n\n// 删除单条消息\nconst deleteMessage = (messageId) => {\n  ElMessageBox.confirm('确定要删除这条消息吗？', '提示', {\n    confirmButtonText: '确定',\n    cancelButtonText: '取消',\n    type: 'warning'\n  }).then(() => {\n    messages.value = messages.value.filter(msg => msg.id !== messageId);\n    ElMessage.success('消息已删除');\n  }).catch(() => {});\n};\n\n// 清空所有消息\nconst clearAllMessages = () => {\n  if (messages.value.length === 0) {\n    ElMessage.info('没有消息可清空');\n    return;\n  }\n  \n  ElMessageBox.confirm('确定要清空所有消息吗？此操作不可恢复！', '警告', {\n    confirmButtonText: '确定',\n    cancelButtonText: '取消',\n    type: 'warning'\n  }).then(() => {\n    messages.value = [];\n    ElMessage.success('所有消息已清空');\n  }).catch(() => {});\n};\n</script>\n\n<style scoped>\n.message-tabs :deep(.el-tabs__nav) {\n  border-radius: 8px;\n  overflow: hidden;\n}\n\n.message-tabs :deep(.el-tabs__item) {\n  padding: 0 20px;\n}\n\n.message-item {\n  padding: 16px 0;\n}\n\n.empty-state {\n  padding: 40px 0;\n  display: flex;\n  justify-content: center;\n}\n</style> "],"names":["Warning","Present","Bicycle","Tools","Promotion","Bell"],"mappings":"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"}