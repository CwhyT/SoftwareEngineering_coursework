{"version":3,"file":"ForgotPassword-f75091f8.js","sources":["../../src/views/auth/ForgotPassword.vue"],"sourcesContent":["<template>\n  <div class=\"forgot-password-page min-h-screen bg-gray-100 py-12 px-4 sm:px-6 lg:px-8 flex items-center justify-center\">\n    <div class=\"max-w-md w-full space-y-8 bg-white p-8 rounded-lg shadow-md\">\n      <div class=\"text-center\">\n        <h2 class=\"mt-2 text-3xl font-extrabold text-gray-900\">\n          找回密码\n        </h2>\n        <p class=\"mt-2 text-sm text-gray-600\">\n          请输入您注册时使用的邮箱地址\n        </p>\n      </div>\n      \n      <el-form\n        ref=\"formRef\"\n        :model=\"form\"\n        :rules=\"rules\"\n        @submit.prevent=\"submitForm\"\n        class=\"mt-8 space-y-6\"\n      >\n        <el-form-item prop=\"email\">\n          <el-input\n            v-model=\"form.email\"\n            placeholder=\"邮箱地址\"\n            :prefix-icon=\"Message\"\n            autocomplete=\"email\"\n          >\n            <template #append>\n              <el-button\n                @click=\"sendEmailCode\"\n                :disabled=\"countdown > 0\"\n                :loading=\"sendingCode\"\n              >\n                {{ countdown > 0 ? `${countdown}s` : '获取验证码' }}\n              </el-button>\n            </template>\n          </el-input>\n        </el-form-item>\n        \n        <el-form-item prop=\"code\" v-if=\"showCodeInput\">\n          <el-input\n            v-model=\"form.code\"\n            placeholder=\"验证码\"\n            :prefix-icon=\"Key\"\n          />\n        </el-form-item>\n\n        <el-form-item prop=\"password\" v-if=\"showPasswordInput\">\n          <el-input\n            v-model=\"form.password\"\n            type=\"password\"\n            placeholder=\"新密码\"\n            :prefix-icon=\"Lock\"\n            show-password\n          />\n        </el-form-item>\n\n        <el-form-item prop=\"confirmPassword\" v-if=\"showPasswordInput\">\n          <el-input\n            v-model=\"form.confirmPassword\"\n            type=\"password\"\n            placeholder=\"确认新密码\"\n            :prefix-icon=\"Lock\"\n            show-password\n          />\n        </el-form-item>\n        \n        <div>\n          <el-button\n            type=\"primary\"\n            native-type=\"submit\"\n            class=\"w-full\"\n            :loading=\"loading\"\n          >\n            {{ showPasswordInput ? '重置密码' : '验证邮箱' }}\n          </el-button>\n        </div>\n        \n        <div class=\"flex items-center justify-center\">\n          <div class=\"text-sm\">\n            <router-link to=\"/auth/login\" class=\"text-blue-600 hover:text-blue-800\">\n              返回登录\n            </router-link>\n          </div>\n        </div>\n        \n        <div v-if=\"errorMessage\" class=\"bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded\">\n          {{ errorMessage }}\n        </div>\n      </el-form>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, reactive } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { ElMessage } from 'element-plus';\nimport { userApi } from '@/api/user';\nimport { Message, Lock, Key } from '@element-plus/icons-vue';\n\nconst router = useRouter();\n\n// 表单数据\nconst form = reactive({\n  email: '',\n  code: '',\n  password: '',\n  confirmPassword: ''\n});\n\n// 状态控制\nconst formRef = ref(null);\nconst loading = ref(false);\nconst errorMessage = ref('');\nconst showCodeInput = ref(false);\nconst showPasswordInput = ref(false);\nconst countdown = ref(0);\nconst sendingCode = ref(false);\n\n// 表单验证规则\nconst rules = {\n  email: [\n    { required: true, message: '请输入邮箱地址', trigger: 'blur' },\n    { type: 'email', message: '请输入正确的邮箱格式', trigger: 'blur' }\n  ],\n  code: [\n    { required: true, message: '请输入验证码', trigger: 'blur' },\n    { len: 6, message: '验证码长度为6位', trigger: 'blur' }\n  ],\n  password: [\n    { required: true, message: '请输入新密码', trigger: 'blur' },\n    { min: 6, max: 20, message: '长度在 6 到 20 个字符', trigger: 'blur' }\n  ],\n  confirmPassword: [\n    { required: true, message: '请确认密码', trigger: 'blur' },\n    { \n      validator: (rule, value, callback) => {\n        if (value !== form.password) {\n          callback(new Error('两次输入的密码不一致'));\n        } else {\n          callback();\n        }\n      }, \n      trigger: 'blur' \n    }\n  ]\n};\n\n// 发送邮箱验证码\nconst sendEmailCode = async () => {\n  if (!form.email) {\n    ElMessage.warning('请输入邮箱地址');\n    return;\n  }\n  \n  if (!/^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/.test(form.email)) {\n    ElMessage.warning('请输入有效的邮箱地址');\n    return;\n  }\n  \n  sendingCode.value = true;\n  \n  try {\n    const response = await userApi.sendEmailCode(form.email);\n    \n    if (response.data.success) {\n      ElMessage.success('验证码已发送到您的邮箱');\n      showCodeInput.value = true;\n      \n      // 开始倒计时\n      countdown.value = 60;\n      const timer = setInterval(() => {\n        countdown.value--;\n        if (countdown.value <= 0) {\n          clearInterval(timer);\n        }\n      }, 1000);\n    } else {\n      ElMessage.error(response.data.message || '发送验证码失败');\n    }\n  } catch (error) {\n    console.error('发送验证码错误:', error);\n    ElMessage.error(error.response?.data?.message || '发送验证码失败，请稍后重试');\n  } finally {\n    sendingCode.value = false;\n  }\n};\n\n// 提交表单\nconst submitForm = async () => {\n  if (!formRef.value) return;\n  \n  await formRef.value.validate(async (valid) => {\n    if (!valid) return;\n    \n    loading.value = true;\n    errorMessage.value = '';\n    \n    try {\n      if (!showPasswordInput.value) {\n        // 第一步：验证邮箱验证码\n        const response = await userApi.verifyEmail(form.email, form.code);\n        \n        if (response.data.success) {\n          ElMessage.success('邮箱验证成功，请设置新密码');\n          showPasswordInput.value = true;\n        } else {\n          errorMessage.value = response.data.message || '验证码验证失败';\n        }\n      } else {\n        // 第二步：重置密码\n        const response = await userApi.resetPassword({\n          email: form.email,\n          code: form.code,\n          password: form.password\n        });\n        \n        if (response.data.success) {\n          ElMessage.success('密码重置成功，请使用新密码登录');\n          router.push('/auth/login');\n        } else {\n          errorMessage.value = response.data.message || '密码重置失败';\n        }\n      }\n    } catch (error) {\n      console.error('操作失败:', error);\n      errorMessage.value = error.response?.data?.message || '操作失败，请稍后重试';\n    } finally {\n      loading.value = false;\n    }\n  });\n};\n</script>\n\n<style scoped>\n.form-input :deep(.el-input__wrapper) {\n  border-radius: 0.375rem;\n  box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.05);\n}\n\n.form-input :deep(.el-input__wrapper.is-focus) {\n  box-shadow: 0 0 0 2px rgba(59, 130, 246, 0.3), 0 1px 2px 0 rgba(0, 0, 0, 0.05);\n}\n</style> "],"names":[],"mappings":"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"}